index:
  nav:
    features: 特性
    resources: 资料
    facilities: 周边
  headernav:
    tutorial: 教程
    practice: 指南
    example: 示例
    api: API
    home: HOME
article:
  edit: 编辑本文
  gotop: 回到顶部
recommend:
  tutorial: 教程
  tutorial_setup: 安装
  tutorial_background: 背景
  tutorial_start: 开始
  tutorial_template: 模板
  tutorial_data_method: 数据操作
  tutorial_data_checking: 数据校验
  tutorial_style: 样式
  tutorial_if: 条件
  tutorial_for: 循环
  tutorial_event: 事件处理
  tutorial_form: 表单
  tutorial_slot: 插槽
  tutorial_transition: 过渡
  tutorial_component: 组件
  tutorial_reverse: 组件反解
  tutorial_ssr: 服务端渲染
  more: 了解更多
  more_component_api: 组件 API
  more_main_api: 主模块 API
  more_dist_files: 发布版本说明
  more_changelog: 版本更新日志
  facilities: 周边
  example: 示例
  example_start: 一些小示例
  example_single_way_flow: 单向流
example:
  start: 小示例
  start_description: 一些小的示例，主要是展示 San 一些小特性的用法。
  todos_description: 一个 Todos 应用的例子，包含列表、列表内操作、表单提交、浮出层、交互组件等应用开发中常见的场景。
  todos_esnext_description: 上面 Todos 应用的 ESNext 版本。其使用了webpack + babel，更符合流行的应用开发习惯。
  single_way_flow: 单向流
  todos_store_description: 上面 Todos 应用的单向流版本。其使用了 san-store。
  online: 在线用法小示例
practice:
  data:
    title: 数据
    0: 什么东西可以保存在 data 里？
    1: 什么东西不要保存在 data 里？
    2: data bind 时的 auto camel
  tpl:
    title: 视图模板
    0: 如何遍历一个对象？
    1: 数组深层更新如何触发视图更新？
    2: 如何实现元素的显示/隐藏？
  msg:
    title: 组件间通信
    0: 父组件如何更新子组件？
    1: 子组件如何通知父组件？
    2: 子组件与更高层的组件如何通信？
    3: 动态子组件如何传递消息给父组件?
  component:
    title: 组件管理
    0: 我们可以操作 DOM 吗？
    1: 如何处理绝对定位组件的 DOM？
  route:
    title: 路由管理
    0: 如何使用 san-router 建立一个单页应用的后台系统？
  state:
    title: 应用状态管理
    0: 如何使用 san-store 实现后台系统的状态管理？
  faq:
    0: Q&A集锦